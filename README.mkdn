Twitter Bootstrap- Compass Plugin
================================

Bootstrap is a toolkit from Twitter designed to kickstart development of webapps and sites.
It includes base CSS and HTML for typography, forms, buttons, tables, grids, navigation, and more.: <http://twitter.github.com/bootstrap/>

* This plugin is consistent with 1.2.0 version of Bootstrap  
------------------------------------------------------------

This plugin adds the Bootstrap to [Compass](http://compass-style.org/).

Install
=======

    gem install compass-bootstrap



Adding the Bootstrap plugin to an existing project
============================================
Add the following to your compass.rb

    # Require any additional compass plugins here.
    require 'compass-bootstrap'

Run the following on your project's directory

    compass install compass-bootstrap/compass-bootstrap 
    
this will add the following files to your stylesheets dir:

    create app/stylesheets/compass_bootstrap.scss 
    create app/stylesheets/_reset.scss 
    create app/stylesheets/_preboot.scss 
    create app/stylesheets/_scaffolding.scss 
    create app/stylesheets/_type.scss 
    create app/stylesheets/_tables.scss 
    create app/stylesheets/_forms.scss 
    create app/stylesheets/_patterns.scss 

Now you can add the bootstrap style to your .scss/.sass files:

    @import 'compass_bootstrap';
    
this will make available all the classes and styles from bootstrap 

### If you only want to add some bootstrap styles to your files, add:

    @import 'preboot.scss';

And now you can use the mixins on your own classes:


## Changing the theme color:
-----------------------------

Open _preboot.sccs and you will see the entire list of colors, you can change those in order to apply your own color scheme

    // VARIABLES
    // ---------

    // / Links
    $linkColor:         #0069d6;
    $linkColorHover:    darken($linkColor, 10);

    // Grays
    $black:             #000;
    $grayDark:          lighten($black, 25%);
    $gray:              lighten($black, 50%);
    $grayLight:         lighten($black, 75%);
    $grayLighter:       lighten($black, 90%);
    $white:             #fff;

    // Accent Colors
    $blue:              #049CDB;
    $blueDark:          #0064CD;
    $green:             #46a546;
    $red:               #9d261d;
    $yellow:            #ffc40d;
    $orange:            #f89406;
    $pink:              #c3325f;
    $purple:            #7a43b6;

    // Baseline grid
    $basefont:          13px;
    $baseline:          18px;

    // Griditude
    $gridColumns:       16;
    $gridColumnWidth:   40px;
    $gridGutterWidth:   20px;
    $extraSpace:        ($gridGutterWidth * 2); // For our grid calculations
    $siteWidth:         ($gridColumns * $gridColumnWidth) + ($gridGutterWidth * ($gridColumns - 1));

    // Color Scheme
    $baseColor:         $blue;                  // Set a base color
    $complement:        spin($baseColor, 180);  // Determine a complementary color
    $split1:            spin($baseColor, 158);  // Split complements
    $split2:            spin($baseColor, -158);
    $triad1:            spin($baseColor, 135);  // Triads colors
    $triad2:            spin($baseColor, -135);
    $tetra1:            spin($baseColor, 90);   // Tetra colors
    $tetra2:            spin($baseColor, -90);
    $analog1:           spin($baseColor, 22);   // Analogs colors
    $analog2:           spin($baseColor, -22);


## TODO

* make the documentation file for mixins and a example site
* port more classes to mixins

